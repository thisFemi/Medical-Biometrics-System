/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package face;


import com.digitalpersona.onetouch.DPFPCaptureFeedback;
import com.digitalpersona.onetouch.DPFPDataPurpose;
import com.digitalpersona.onetouch.DPFPFeatureSet;
import com.digitalpersona.onetouch.DPFPGlobal;
import com.digitalpersona.onetouch.DPFPSample;
import com.digitalpersona.onetouch.DPFPTemplate;
import com.digitalpersona.onetouch.capture.DPFPCapture;
import com.digitalpersona.onetouch.capture.event.DPFPDataAdapter;
import com.digitalpersona.onetouch.capture.event.DPFPDataEvent;
import com.digitalpersona.onetouch.capture.event.DPFPImageQualityAdapter;
import com.digitalpersona.onetouch.capture.event.DPFPImageQualityEvent;
import com.digitalpersona.onetouch.capture.event.DPFPReaderStatusAdapter;
import com.digitalpersona.onetouch.capture.event.DPFPReaderStatusEvent;
import com.digitalpersona.onetouch.capture.event.DPFPSensorAdapter;
import com.digitalpersona.onetouch.capture.event.DPFPSensorEvent;
import com.digitalpersona.onetouch.processing.DPFPEnrollment;
import com.digitalpersona.onetouch.processing.DPFPFeatureExtraction;
import com.digitalpersona.onetouch.processing.DPFPImageQualityException;
import com.digitalpersona.onetouch.verification.DPFPVerification;
import com.digitalpersona.onetouch.verification.DPFPVerificationResult;
import java.awt.Graphics;
import java.awt.Image;
import java.awt.event.ComponentAdapter;
import java.awt.event.ComponentEvent;
import java.awt.image.BufferedImage;
import java.io.ByteArrayInputStream;
import java.io.File;
import java.io.FileOutputStream;
import java.io.IOException;
import java.io.InputStream;
import java.net.MalformedURLException;
import java.net.URL;
import java.net.URLConnection;
import java.net.URLEncoder;
import java.sql.Array;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSetMetaData;
import java.sql.SQLException;
import java.text.SimpleDateFormat;
import java.util.Date;
import javax.imageio.ImageIO;
import javax.swing.JOptionPane;
import javax.swing.SwingUtilities;
import javax.swing.table.DefaultTableModel;
import netscape.javascript.JSObject;
import java.sql.ResultSet;
import java.time.LocalDateTime;
import java.time.format.DateTimeFormatter;
import java.util.Random;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ImageIcon;
import javax.swing.JDialog;
import util.ConectaBanco;

/**
 *
 * @author Fetkof
 */
public class RecognizeFace extends javax.swing.JFrame {
    
protected static JSObject jso = null;
public static DefaultTableModel dtm; 
public static ResultSetMetaData md;
   ModelPerson mod = new ModelPerson();
    ControlPerson cod = new ControlPerson();

   

    //Personal Info
    String root, firstNamePerson, address, dobPerson, telefone, nextOfKin;
    //Medical Info
    String bGandGenotype, allergies, lastReport;
    int idPerson;

      Connection conn;
PreparedStatement pstmt;
ResultSet rs;
private static final long serialVersionUID = 3389476239431661943L;
	private DPFPCapture capturer = DPFPGlobal.getCaptureFactory().createCapture();
      

private DPFPVerification Verificador = DPFPGlobal.getVerificationFactory().createVerification();
      
    //Utils
    ConectaBanco conecta = new ConectaBanco();


    /**
     * Creates new form RecognizeFace
     */
    public RecognizeFace() {
 super("Mark Attendancee | Group Project");
        initComponents();
        
        
         conn= Javaconnect.ConnecrDB();
  // dateCheck();
        // this.setExtendedState(JFrame.MAXIMIZED_BOTH);
      this.addComponentListener(new ComponentAdapter() {
			public void componentShown(ComponentEvent e) {
				init();
				start();
			}
			public void componentHidden(ComponentEvent e) {
				stop();
			}

		});
	
		setLocationRelativeTo(null);
		setVisible(true);
      
    }

        
   

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jFrame1 = new javax.swing.JFrame();
        jFrame2 = new javax.swing.JFrame();
        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        txt_id_label = new javax.swing.JLabel();
        accuracy = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        kGradientPanel5 = new keeptoo.KGradientPanel();
        jPanel4 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        kGradientPanel1 = new keeptoo.KGradientPanel();
        label_name = new javax.swing.JLabel();
        kGradientPanel2 = new keeptoo.KGradientPanel();
        label_phone = new javax.swing.JLabel();
        kGradientPanel3 = new keeptoo.KGradientPanel();
        label_id = new javax.swing.JLabel();
        kGradientPanel7 = new keeptoo.KGradientPanel();
        label_office1 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        kGradientPanel8 = new keeptoo.KGradientPanel();
        label_office2 = new javax.swing.JLabel();
        kGradientPanel9 = new keeptoo.KGradientPanel();
        label_office3 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        kGradientPanel10 = new keeptoo.KGradientPanel();
        label_office4 = new javax.swing.JLabel();
        kGradientPanel11 = new keeptoo.KGradientPanel();
        label_office5 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        kGradientPanel12 = new keeptoo.KGradientPanel();
        label_office6 = new javax.swing.JLabel();
        kGradientPanel13 = new keeptoo.KGradientPanel();
        label_office7 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        jLabel18 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        kGradientPanel4 = new keeptoo.KGradientPanel();
        label_address = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        kGradientPanel6 = new keeptoo.KGradientPanel();
        label_nextOfKin = new javax.swing.JLabel();
        kGradientPanel14 = new keeptoo.KGradientPanel();
        label_bGandGenotype = new javax.swing.JLabel();
        jLabel19 = new javax.swing.JLabel();
        kGradientPanel15 = new keeptoo.KGradientPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        label_allergies = new javax.swing.JTextArea();
        jLabel20 = new javax.swing.JLabel();
        jLabel22 = new javax.swing.JLabel();
        kGradientPanel17 = new keeptoo.KGradientPanel();
        label_name6 = new javax.swing.JLabel();
        jLabel23 = new javax.swing.JLabel();
        kGradientPanel18 = new keeptoo.KGradientPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        label_lastReport = new javax.swing.JTextArea();
        jLabel24 = new javax.swing.JLabel();
        kGradientPanel19 = new keeptoo.KGradientPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        label_extra = new javax.swing.JTextArea();
        jLabel12 = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        picture = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        prompt = new javax.swing.JLabel();
        jLabel21 = new javax.swing.JLabel();
        jPanel5 = new javax.swing.JPanel();
        picture1 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();

        javax.swing.GroupLayout jFrame1Layout = new javax.swing.GroupLayout(jFrame1.getContentPane());
        jFrame1.getContentPane().setLayout(jFrame1Layout);
        jFrame1Layout.setHorizontalGroup(
            jFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        jFrame1Layout.setVerticalGroup(
            jFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout jFrame2Layout = new javax.swing.GroupLayout(jFrame2.getContentPane());
        jFrame2.getContentPane().setLayout(jFrame2Layout);
        jFrame2Layout.setHorizontalGroup(
            jFrame2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        jFrame2Layout.setVerticalGroup(
            jFrame2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );

        setResizable(false);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(132, 242, 145)));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel2.setBackground(new java.awt.Color(0, 102, 204));
        jPanel2.setLayout(null);

        txt_id_label.setBackground(new java.awt.Color(132, 242, 145));
        txt_id_label.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        txt_id_label.setForeground(new java.awt.Color(255, 255, 255));
        jPanel2.add(txt_id_label);
        txt_id_label.setBounds(0, 0, 150, 40);

        accuracy.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        accuracy.setForeground(new java.awt.Color(158, 158, 159));
        jPanel2.add(accuracy);
        accuracy.setBounds(430, 150, 90, 0);

        jLabel14.setBackground(new java.awt.Color(90, 68, 193));
        jLabel14.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel14.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jPanel2.add(jLabel14);
        jLabel14.setBounds(190, 10, 200, 20);

        jPanel1.add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(400, 10, 400, 40));

        kGradientPanel5.setBackground(new java.awt.Color(255, 255, 255));
        kGradientPanel5.setkFillBackground(false);
        kGradientPanel5.setLayout(null);

        jPanel4.setBackground(new java.awt.Color(255, 255, 255));
        jPanel4.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel2.setForeground(new java.awt.Color(82, 82, 82));
        jLabel2.setText("Patient ID");
        jPanel4.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(410, 20, -1, -1));

        jLabel3.setForeground(new java.awt.Color(82, 82, 82));
        jLabel3.setText("Fullname:");
        jPanel4.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 20, -1, -1));

        jLabel4.setForeground(new java.awt.Color(82, 82, 82));
        jLabel4.setText("Phone:");
        jPanel4.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 20, -1, -1));

        kGradientPanel1.setBackground(new java.awt.Color(255, 255, 255));
        kGradientPanel1.setkEndColor(new java.awt.Color(57, 114, 227));
        kGradientPanel1.setkFillBackground(false);
        kGradientPanel1.setkStartColor(new java.awt.Color(0, 102, 255));
        kGradientPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());
        kGradientPanel1.add(label_name, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 0, 180, 30));

        jPanel4.add(kGradientPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 40, 190, 30));

        kGradientPanel2.setBackground(new java.awt.Color(255, 255, 255));
        kGradientPanel2.setkEndColor(new java.awt.Color(57, 114, 227));
        kGradientPanel2.setkFillBackground(false);
        kGradientPanel2.setkStartColor(new java.awt.Color(0, 102, 204));
        kGradientPanel2.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());
        kGradientPanel2.add(label_phone, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 0, 170, 30));

        jPanel4.add(kGradientPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 40, 190, 30));

        kGradientPanel3.setBackground(new java.awt.Color(255, 255, 255));
        kGradientPanel3.setkEndColor(new java.awt.Color(57, 114, 227));
        kGradientPanel3.setkFillBackground(false);
        kGradientPanel3.setkStartColor(new java.awt.Color(0, 102, 204));
        kGradientPanel3.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());
        kGradientPanel3.add(label_id, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 0, 130, 30));

        kGradientPanel7.setBackground(new java.awt.Color(255, 255, 255));
        kGradientPanel7.setkEndColor(new java.awt.Color(57, 114, 227));
        kGradientPanel7.setkFillBackground(false);
        kGradientPanel7.setkStartColor(new java.awt.Color(122, 227, 192));
        kGradientPanel7.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());
        kGradientPanel7.add(label_office1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 0, 130, 30));

        kGradientPanel3.add(kGradientPanel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(410, 40, 140, 30));

        jLabel8.setForeground(new java.awt.Color(82, 82, 82));
        jLabel8.setText("Staff ID");
        kGradientPanel3.add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(410, 20, -1, -1));

        kGradientPanel8.setBackground(new java.awt.Color(255, 255, 255));
        kGradientPanel8.setkEndColor(new java.awt.Color(57, 114, 227));
        kGradientPanel8.setkFillBackground(false);
        kGradientPanel8.setkStartColor(new java.awt.Color(122, 227, 192));
        kGradientPanel8.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());
        kGradientPanel8.add(label_office2, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 0, 130, 30));

        kGradientPanel9.setBackground(new java.awt.Color(255, 255, 255));
        kGradientPanel9.setkEndColor(new java.awt.Color(57, 114, 227));
        kGradientPanel9.setkFillBackground(false);
        kGradientPanel9.setkStartColor(new java.awt.Color(122, 227, 192));
        kGradientPanel9.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());
        kGradientPanel9.add(label_office3, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 0, 130, 30));

        kGradientPanel8.add(kGradientPanel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(410, 40, 140, 30));

        jLabel9.setForeground(new java.awt.Color(82, 82, 82));
        jLabel9.setText("Staff ID");
        kGradientPanel8.add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(410, 20, -1, -1));

        kGradientPanel3.add(kGradientPanel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(410, 40, 140, 30));

        jLabel10.setForeground(new java.awt.Color(82, 82, 82));
        jLabel10.setText("Staff ID");
        kGradientPanel3.add(jLabel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(410, 20, -1, -1));

        kGradientPanel10.setBackground(new java.awt.Color(255, 255, 255));
        kGradientPanel10.setkEndColor(new java.awt.Color(57, 114, 227));
        kGradientPanel10.setkFillBackground(false);
        kGradientPanel10.setkStartColor(new java.awt.Color(122, 227, 192));
        kGradientPanel10.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());
        kGradientPanel10.add(label_office4, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 0, 130, 30));

        kGradientPanel11.setBackground(new java.awt.Color(255, 255, 255));
        kGradientPanel11.setkEndColor(new java.awt.Color(57, 114, 227));
        kGradientPanel11.setkFillBackground(false);
        kGradientPanel11.setkStartColor(new java.awt.Color(122, 227, 192));
        kGradientPanel11.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());
        kGradientPanel11.add(label_office5, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 0, 130, 30));

        kGradientPanel10.add(kGradientPanel11, new org.netbeans.lib.awtextra.AbsoluteConstraints(410, 40, 140, 30));

        jLabel11.setForeground(new java.awt.Color(82, 82, 82));
        jLabel11.setText("Staff ID");
        kGradientPanel10.add(jLabel11, new org.netbeans.lib.awtextra.AbsoluteConstraints(410, 20, -1, -1));

        kGradientPanel12.setBackground(new java.awt.Color(255, 255, 255));
        kGradientPanel12.setkEndColor(new java.awt.Color(57, 114, 227));
        kGradientPanel12.setkFillBackground(false);
        kGradientPanel12.setkStartColor(new java.awt.Color(122, 227, 192));
        kGradientPanel12.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());
        kGradientPanel12.add(label_office6, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 0, 130, 30));

        kGradientPanel13.setBackground(new java.awt.Color(255, 255, 255));
        kGradientPanel13.setkEndColor(new java.awt.Color(57, 114, 227));
        kGradientPanel13.setkFillBackground(false);
        kGradientPanel13.setkStartColor(new java.awt.Color(122, 227, 192));
        kGradientPanel13.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());
        kGradientPanel13.add(label_office7, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 0, 130, 30));

        kGradientPanel12.add(kGradientPanel13, new org.netbeans.lib.awtextra.AbsoluteConstraints(410, 40, 140, 30));

        jLabel13.setForeground(new java.awt.Color(82, 82, 82));
        jLabel13.setText("Staff ID");
        kGradientPanel12.add(jLabel13, new org.netbeans.lib.awtextra.AbsoluteConstraints(410, 20, -1, -1));

        kGradientPanel10.add(kGradientPanel12, new org.netbeans.lib.awtextra.AbsoluteConstraints(410, 40, 140, 30));

        jLabel17.setForeground(new java.awt.Color(82, 82, 82));
        jLabel17.setText("Staff ID");
        kGradientPanel10.add(jLabel17, new org.netbeans.lib.awtextra.AbsoluteConstraints(410, 20, -1, -1));

        kGradientPanel3.add(kGradientPanel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(410, 40, 140, 30));

        jLabel18.setForeground(new java.awt.Color(82, 82, 82));
        jLabel18.setText("Staff ID");
        kGradientPanel3.add(jLabel18, new org.netbeans.lib.awtextra.AbsoluteConstraints(410, 20, -1, -1));

        jPanel4.add(kGradientPanel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(410, 40, 140, 30));

        jLabel6.setForeground(new java.awt.Color(82, 82, 82));
        jLabel6.setText("Home Address");
        jPanel4.add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 80, -1, -1));

        kGradientPanel4.setBackground(new java.awt.Color(255, 255, 255));
        kGradientPanel4.setkEndColor(new java.awt.Color(57, 114, 227));
        kGradientPanel4.setkFillBackground(false);
        kGradientPanel4.setkStartColor(new java.awt.Color(0, 102, 204));
        kGradientPanel4.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());
        kGradientPanel4.add(label_address, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 0, 170, 30));

        jPanel4.add(kGradientPanel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 100, 190, 30));

        jLabel7.setForeground(new java.awt.Color(82, 82, 82));
        jLabel7.setText("Next of Kin");
        jPanel4.add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 80, -1, -1));

        kGradientPanel6.setBackground(new java.awt.Color(255, 255, 255));
        kGradientPanel6.setkEndColor(new java.awt.Color(57, 114, 227));
        kGradientPanel6.setkFillBackground(false);
        kGradientPanel6.setkStartColor(new java.awt.Color(0, 102, 204));
        kGradientPanel6.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());
        kGradientPanel6.add(label_nextOfKin, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 0, 170, 30));

        jPanel4.add(kGradientPanel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 100, 190, 30));

        kGradientPanel14.setBackground(new java.awt.Color(255, 255, 255));
        kGradientPanel14.setkEndColor(new java.awt.Color(57, 114, 227));
        kGradientPanel14.setkFillBackground(false);
        kGradientPanel14.setkStartColor(new java.awt.Color(0, 102, 204));
        kGradientPanel14.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());
        kGradientPanel14.add(label_bGandGenotype, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 0, 120, 30));

        jPanel4.add(kGradientPanel14, new org.netbeans.lib.awtextra.AbsoluteConstraints(410, 100, 140, 30));

        jLabel19.setForeground(new java.awt.Color(82, 82, 82));
        jLabel19.setText("Blood Group and Genotype");
        jPanel4.add(jLabel19, new org.netbeans.lib.awtextra.AbsoluteConstraints(410, 80, 140, 20));

        kGradientPanel15.setBackground(new java.awt.Color(255, 255, 255));
        kGradientPanel15.setkEndColor(new java.awt.Color(57, 114, 227));
        kGradientPanel15.setkFillBackground(false);
        kGradientPanel15.setkStartColor(new java.awt.Color(0, 102, 204));
        kGradientPanel15.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        label_allergies.setEditable(false);
        label_allergies.setColumns(20);
        label_allergies.setRows(5);
        jScrollPane2.setViewportView(label_allergies);

        kGradientPanel15.add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 150, 90));

        jPanel4.add(kGradientPanel15, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 160, 160, 90));

        jLabel20.setForeground(new java.awt.Color(82, 82, 82));
        jLabel20.setText("Allergies");
        jPanel4.add(jLabel20, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 140, 50, -1));

        jLabel22.setForeground(new java.awt.Color(82, 82, 82));
        jLabel22.setText("Allergies");
        jPanel4.add(jLabel22, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 140, 50, -1));

        kGradientPanel17.setBackground(new java.awt.Color(255, 255, 255));
        kGradientPanel17.setkEndColor(new java.awt.Color(57, 114, 227));
        kGradientPanel17.setkFillBackground(false);
        kGradientPanel17.setkStartColor(new java.awt.Color(122, 227, 192));
        kGradientPanel17.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());
        kGradientPanel17.add(label_name6, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 0, 170, 80));

        jPanel4.add(kGradientPanel17, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 160, 160, 90));

        jLabel23.setForeground(new java.awt.Color(82, 82, 82));
        jLabel23.setText("Last Appointment -Date and Report");
        jPanel4.add(jLabel23, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 140, 180, 20));

        kGradientPanel18.setBackground(new java.awt.Color(255, 255, 255));
        kGradientPanel18.setkEndColor(new java.awt.Color(57, 114, 227));
        kGradientPanel18.setkFillBackground(false);
        kGradientPanel18.setkStartColor(new java.awt.Color(0, 102, 204));
        kGradientPanel18.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        label_lastReport.setEditable(false);
        label_lastReport.setColumns(20);
        label_lastReport.setRows(5);
        jScrollPane3.setViewportView(label_lastReport);

        kGradientPanel18.add(jScrollPane3, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 150, 90));

        jPanel4.add(kGradientPanel18, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 160, 160, 90));

        jLabel24.setForeground(new java.awt.Color(82, 82, 82));
        jLabel24.setText("Next Appointment- Date and Report");
        jPanel4.add(jLabel24, new org.netbeans.lib.awtextra.AbsoluteConstraints(380, 140, 180, 20));

        kGradientPanel19.setBackground(new java.awt.Color(255, 255, 255));
        kGradientPanel19.setkEndColor(new java.awt.Color(57, 114, 227));
        kGradientPanel19.setkFillBackground(false);
        kGradientPanel19.setkStartColor(new java.awt.Color(0, 102, 204));
        kGradientPanel19.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        label_extra.setEditable(false);
        label_extra.setColumns(20);
        label_extra.setRows(5);
        jScrollPane1.setViewportView(label_extra);

        kGradientPanel19.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 160, 90));

        jPanel4.add(kGradientPanel19, new org.netbeans.lib.awtextra.AbsoluteConstraints(380, 160, 170, 90));

        kGradientPanel5.add(jPanel4);
        jPanel4.setBounds(110, 110, 560, 270);

        jLabel12.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel12.setForeground(new java.awt.Color(158, 158, 159));
        jLabel12.setText("Personal Information");
        kGradientPanel5.add(jLabel12);
        jLabel12.setBounds(340, 80, 166, 25);

        jPanel3.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(picture, javax.swing.GroupLayout.DEFAULT_SIZE, 74, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(picture, javax.swing.GroupLayout.DEFAULT_SIZE, 72, Short.MAX_VALUE)
                .addContainerGap())
        );

        kGradientPanel5.add(jPanel3);
        jPanel3.setBounds(10, 64, 100, 100);

        jLabel16.setFont(new java.awt.Font("Segoe UI Black", 0, 24)); // NOI18N
        jLabel16.setForeground(new java.awt.Color(100, 100, 100));
        jLabel16.setText("Verify Patient ");
        kGradientPanel5.add(jLabel16);
        jLabel16.setBounds(20, 20, 169, 33);

        prompt.setFont(new java.awt.Font("Segoe UI Black", 0, 14)); // NOI18N
        prompt.setForeground(new java.awt.Color(100, 100, 100));
        kGradientPanel5.add(prompt);
        prompt.setBounds(160, 410, 370, 30);

        jLabel21.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel21MouseClicked(evt);
            }
        });
        kGradientPanel5.add(jLabel21);
        jLabel21.setBounds(0, 0, 0, 0);

        jPanel5.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(picture1, javax.swing.GroupLayout.DEFAULT_SIZE, 74, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(picture1, javax.swing.GroupLayout.DEFAULT_SIZE, 72, Short.MAX_VALUE)
                .addContainerGap())
        );

        kGradientPanel5.add(jPanel5);
        jPanel5.setBounds(690, 60, 100, 100);

        jPanel1.add(kGradientPanel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 810, 460));

        jLabel15.setFont(new java.awt.Font("Segoe UI Black", 0, 24)); // NOI18N
        jLabel15.setForeground(new java.awt.Color(100, 100, 100));
        jLabel15.setText("Mark Attendance");
        jPanel1.add(jLabel15, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 10, -1, -1));

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 810, 470));

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jLabel21MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel21MouseClicked

    }//GEN-LAST:event_jLabel21MouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(RecognizeFace.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(RecognizeFace.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(RecognizeFace.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(RecognizeFace.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new RecognizeFace().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel accuracy;
    private javax.swing.JFrame jFrame1;
    private javax.swing.JFrame jFrame2;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private keeptoo.KGradientPanel kGradientPanel1;
    private keeptoo.KGradientPanel kGradientPanel10;
    private keeptoo.KGradientPanel kGradientPanel11;
    private keeptoo.KGradientPanel kGradientPanel12;
    private keeptoo.KGradientPanel kGradientPanel13;
    private keeptoo.KGradientPanel kGradientPanel14;
    private keeptoo.KGradientPanel kGradientPanel15;
    private keeptoo.KGradientPanel kGradientPanel17;
    private keeptoo.KGradientPanel kGradientPanel18;
    private keeptoo.KGradientPanel kGradientPanel19;
    private keeptoo.KGradientPanel kGradientPanel2;
    private keeptoo.KGradientPanel kGradientPanel3;
    private keeptoo.KGradientPanel kGradientPanel4;
    private keeptoo.KGradientPanel kGradientPanel5;
    private keeptoo.KGradientPanel kGradientPanel6;
    private keeptoo.KGradientPanel kGradientPanel7;
    private keeptoo.KGradientPanel kGradientPanel8;
    private keeptoo.KGradientPanel kGradientPanel9;
    private javax.swing.JLabel label_address;
    private javax.swing.JTextArea label_allergies;
    private javax.swing.JLabel label_bGandGenotype;
    private javax.swing.JTextArea label_extra;
    private javax.swing.JLabel label_id;
    private javax.swing.JTextArea label_lastReport;
    private javax.swing.JLabel label_name;
    private javax.swing.JLabel label_name6;
    private javax.swing.JLabel label_nextOfKin;
    private javax.swing.JLabel label_office1;
    private javax.swing.JLabel label_office2;
    private javax.swing.JLabel label_office3;
    private javax.swing.JLabel label_office4;
    private javax.swing.JLabel label_office5;
    private javax.swing.JLabel label_office6;
    private javax.swing.JLabel label_office7;
    private javax.swing.JLabel label_phone;
    private javax.swing.JLabel picture;
    private javax.swing.JLabel picture1;
    private javax.swing.JLabel prompt;
    private javax.swing.JLabel txt_id_label;
    // End of variables declaration//GEN-END:variables
 
    private void rec() {
        //Retrieve data from database
        new Thread() {
            @Override
            public void run() {
                conecta.conexao();
                try {
                    conecta.executaSQL("SELECT * FROM person WHERE id = " + String.valueOf(idPerson));
                    while (conecta.rs.next()) {
                        //Personal Info
                      label_name.setText(conecta.rs.getString("first_name"));
                    address=conecta.rs.getString("address");
                       label_nextOfKin.setText(conecta.rs.getString("next_of_kin"));
                       // label_id.setText(conecta.rs.getString("profile_linkedin"));
                        telefone = conecta.rs.getString("phone_number");
                        label_phone.setText(telefone);
                        label_id.setText("Patient. ID: "+conecta.rs.getString("id"));

                        //Medical Info
                        label_bGandGenotype.setText(conecta.rs.getString("blood_group_genotype"));
                          label_allergies.setText(conecta.rs.getString("allergies"));
                            label_lastReport.setText(conecta.rs.getString("lastreport"));
                              label_extra.setText(conecta.rs.getString("extra"));




                        Array ident = conecta.rs.getArray("first_name");
                        String[] person = (String[]) ident.getArray();

                        for (String person1 : person) {
                            System.out.println(person1);
                        }

                    }
                } catch (Exception e) {
                }

            }
        }.start();
    }

    
        private void insertDatabase() {
            conecta.conexao();
            ResultSet rs;
            String date = new SimpleDateFormat("dd/MM/yyy").format(new Date(System.currentTimeMillis()));
             LocalDateTime time =LocalDateTime.now();
            String sqll = "SELECT * FROM attendance WHERE date=? AND matricnumber=? AND time=?";
        try{
           PreparedStatement pstmt = conecta.conn.prepareStatement(sqll);
           pstmt.setString(1 , date);
           pstmt.setString(2 , time.toString());
           pstmt.setString(3 , label_phone.getText());
           rs = pstmt.executeQuery();
           if(rs.next()){ 
          
            
           }else{
               PreparedStatement pst = conecta.conn.prepareStatement("INSERT INTO attendance (date, time, matricnumber, id_num) VALUES (?,?, ?, ?)");
            pst.setString(1, date);
            pst.setString(2, time.toString());
            pst.setString(3, label_id.getText());
            pst.setString(4, txt_id_label.getText());
        
           
            pst.executeUpdate();
            String present_date = new SimpleDateFormat("dd/MM/yyy").format(new Date(System.currentTimeMillis()));
            
           }
           
       
          
           
        } catch (SQLException ex) {
            System.out.println("Error: " + ex);
        }    
        
        }
        
        
         protected void init()
	{

		capturer.addDataListener(new DPFPDataAdapter() {
			public void dataAcquired(final DPFPDataEvent e) {
				SwingUtilities.invokeLater(new Runnable() {	
                                    public void run() {
					makeReport("The fingerprint sample was captured.");
					setPrompt("Scan the same finger again.");
					process(e.getSample());
                                        
                                        
                                         
      
        try {
        check();
    } catch (Exception ex) {
        ex.printStackTrace();
    }
				}});
			}
		});
		capturer.addReaderStatusListener(new DPFPReaderStatusAdapter() {
			public void readerConnected(final DPFPReaderStatusEvent e) {
				SwingUtilities.invokeLater(new Runnable() {	public void run() {
					setPrompt("Scan the Patient's fingerprint.");
				}});
			}
			public void readerDisconnected(final DPFPReaderStatusEvent e) {
				SwingUtilities.invokeLater(new Runnable() {	public void run() {
					setPrompt("Connect Fingerprint Reader.");
				}});
			}
		});
		capturer.addSensorListener(new DPFPSensorAdapter() {
			public void fingerTouched(final DPFPSensorEvent e) {
				SwingUtilities.invokeLater(new Runnable() {	public void run() {
					makeReport("The fingerprint reader was touched.");
				}});
			}
			public void fingerGone(final DPFPSensorEvent e) {
				SwingUtilities.invokeLater(new Runnable() {	public void run() {
					makeReport("The finger was removed from the fingerprint reader.");
				}});
			}
		});
		capturer.addImageQualityListener(new DPFPImageQualityAdapter() {
			public void onImageQuality(final DPFPImageQualityEvent e) {
				SwingUtilities.invokeLater(new Runnable() {	public void run() {
					if (e.getFeedback().equals(DPFPCaptureFeedback.CAPTURE_FEEDBACK_GOOD))
						makeReport("The quality of the fingerprint sample is good.");
					else
						makeReport("The quality of the fingerprint sample is poor.");
				}});
			}
		});
	}

   public  void check(){
        
try{ 
 
   pstmt = conn.prepareStatement("SELECT * FROM person");
 
rs= pstmt.executeQuery();
 
int i=0;
while(rs.next()){
i++;
System.out.println("SQL:"+rs.getString(1)+"\n");

System.out.println("Contador:"+i+"\n");

byte templateBuffer[] = rs.getBytes("finger");
 
 
DPFPTemplate referenceTemplate = DPFPGlobal.getTemplateFactory().createTemplate(templateBuffer);
 
setTemplate(referenceTemplate);

DPFPVerificationResult result = Verificador.verify(featuresverificacion, getTemplate());

if (result.isVerified()){
 
 JOptionPane ops1 = new JOptionPane("DATA RETRIEVE!",JOptionPane.INFORMATION_MESSAGE);
                    JDialog dialog1 = ops1.createDialog("PATIENT DATA RETRIEVED!");
                    dialog1.setAlwaysOnTop(true); //<-- this line
                    dialog1.setModal(true);
                    
                    dialog1.setDefaultCloseOperation(JDialog.DISPOSE_ON_CLOSE);
                    dialog1.setVisible(true);
                    
                    Random rnd = new Random();
                    int n = 100000 + rnd.nextInt(900000);
                    label_name.setText(rs.getString("first_name"));
                    //    try {
                    //        sendMessage(phone.getText(),"Token "+n+". If you didnt initiate this, please visit the admin. Thanks");
                    //    } catch (IOException ex) {
                    //        Logger.getLogger(Clocking.class.getName()).log(Level.SEVERE, null, ex);
                    //    }
                    label_phone.setText(rs.getString("phone_number"));
                    label_id.setText(rs.getString("id"));
                    label_address.setText(rs.getString("address"));
                    label_allergies.setText(rs.getString("allergies"));
                    label_bGandGenotype.setText(rs.getString("blood_group_genotype"));
                    label_extra.setText(rs.getString("extra"));
                    label_nextOfKin.setText(rs.getString("next_of_kin"));
                    label_lastReport.setText(rs.getString("lastreport"));
                    byte[] img = rs.getBytes("image");

  

                    //Resize The ImageIcon
                    ImageIcon image = new ImageIcon(img);
                    Image im = image.getImage();
                    Image myImg = im.getScaledInstance(jPanel5.getWidth(), jPanel5.getHeight(),Image.SCALE_SMOOTH);
                    ImageIcon newImage = new ImageIcon(myImg);
                    picture1.setIcon(newImage);
                    insertDatabase();
                    stop();
                    start();
                       }
       
                    }
                    }
                    catch (SQLException e) {
                    System.out.println("Finger print Error: "+e.getMessage());
                    e.printStackTrace();
                    
                    }
    
    }
   
    private void sendMessage(String rec, String message) throws MalformedURLException, IOException{
      //  URL myUrl = new URL("https://www.smsmobile24.com/index.php?option=com_spc&comm=spc_api&username=Encrypt_File&password=ponmile23&sender=Encrypt_File&recipient="+rec+"&message="+"Sender pin is "+password.getText()+"&");
//        
//      URL a = new URL("https://www.smsmobile24.com/index.php?option=com_spc&comm=spc_api&username=Encrypt_File&password=ponmile23&sender=Auth_Token&recipient="+rec+"&message="+URLEncoder.encode(message, "UTF-8")+"");
//        
//        URLConnection connect = a.openConnection();
//        try(InputStream is = connect.getInputStream()){}
    }
    
   private DPFPEnrollment enrollment = DPFPGlobal.getEnrollmentFactory().createEnrollment();
	protected void process(DPFPSample sample){
    
featuresinscripcion = extractFeatures(sample, DPFPDataPurpose.DATA_PURPOSE_ENROLLMENT);


featuresverificacion = extractFeatures(sample, DPFPDataPurpose.DATA_PURPOSE_VERIFICATION);


if (featuresinscripcion != null){
try{
 
enrollment.addFeatures(featuresinscripcion);
 
Image image=convertSampleToBitmap(sample);
drawPicture(image);


}
catch (DPFPImageQualityException ex) {
System.err.println("Error: "+ex.getMessage());
}

finally {
 
switch(enrollment.getTemplateStatus()){
case TEMPLATE_STATUS_READY:  
 
setTemplate(enrollment.getTemplate());
        
break;

case TEMPLATE_STATUS_FAILED: 
enrollment.clear();
stop();
 
setTemplate(null);
JOptionPane.showMessageDialog(this, "Data Retrieve", "Data inspector", JOptionPane.ERROR_MESSAGE);
start();
break;
}
}
}
}
public void setTemplate(DPFPTemplate template) {
DPFPTemplate old = this.template;
this.template = template;
firePropertyChange(TEMPLATE_PROPERTY, old, template);
}

		public DPFPFeatureSet featuresinscripcion;
public DPFPFeatureSet featuresverificacion;

public DPFPFeatureSet extractFeatures(DPFPSample sample, DPFPDataPurpose purpose){
DPFPFeatureExtraction extractor = DPFPGlobal.getFeatureExtractionFactory().createFeatureExtraction();
try {
return extractor.createFeatureSet(sample, purpose);
}
catch (DPFPImageQualityException e) {
return null;
}
}

	protected void start()
	{
		capturer.startCapture();
		setPrompt("Scan patient's fingerprint");
	}

	protected void stop()
	{
		capturer.stopCapture();
	}

	public void setStatus(String string) {
		prompt.setText(string);
	}
	public void setPrompt(String string) {
		prompt.setText(string);
	}
	public void makeReport(String string) {
//		log.append(string + "\n");
	}
private DPFPTemplate template;
public static String TEMPLATE_PROPERTY = "template";    
public DPFPTemplate getTemplate() {
return template;
}

	public void drawPicture(Image image) {
		picture.setIcon(new ImageIcon(
				image.getScaledInstance(picture.getWidth(), picture.getHeight(), Image.SCALE_DEFAULT)));

	}

	protected Image convertSampleToBitmap(DPFPSample sample) {
		return DPFPGlobal.getSampleConversionFactory().createImage(sample);
	}

	

	//For enrollment template, use *.fpt for file format
	//For verification feature, use *.fpp
	protected void writeFile(String filepath, byte[] data) {
		try {
			FileOutputStream out = new FileOutputStream(new File(filepath));
			out.write(data);
			out.flush();
			out.close();
		} catch (Exception e) {
			e.printStackTrace();
		}
	}
        public static void notifyHTML(String result) {
		if(jso!=null)
			jso.call("updateFingerprintStatus", (Object[]) (Object) new String[] {result});
	}

}